name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: windows-latest
    
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Format check with black
      run: |
        black --check .
    
    - name: Type check with mypy
      run: |
        mypy . --ignore-missing-imports
    
    - name: Test with pytest
      run: |
        pytest tests/ --cov=. --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build:
    runs-on: windows-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build executable
      run: |
        python build_complete_gui.py
    
    - name: Test executable
      run: |
        cd VexityBot_Complete
        echo "Testing executable startup..."
        timeout 10 VexityBot.exe || echo "Executable started successfully"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: VexityBot-Executable
        path: VexityBot_Complete/
        retention-days: 30

  release:
    runs-on: windows-latest
    needs: [test, build]
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: VexityBot-Executable
        path: ./release/
    
    - name: Create release package
      run: |
        cd release
        powershell Compress-Archive -Path * -DestinationPath ../VexityBot-v${{ github.event.release.tag_name }}.zip
    
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./VexityBot-v${{ github.event.release.tag_name }}.zip
        asset_name: VexityBot-v${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip
